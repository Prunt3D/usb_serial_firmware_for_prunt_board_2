//
//  USB Serial
//
// Copyright (c) 2020 Manuel Bleichenbacher
// Licensed under MIT License
// https://opensource.org/licenses/MIT
//
// Pseudo random number generator
//

#ifndef prng_h
#define prng_h

#include <stdint.h>
#include <stdlib.h>

/**
 * Pseudo Random Number Generator
 */
struct prng {
    /**
     * Constructs a new instance
     * @param init initial value
     */
    prng(uint32_t init);
    /**
     * Returns the next pseudo random value
     * @return pseudo random value
     */
    uint32_t next();
    /**
     * Fills the buffer with pseudo random data
     * @param buf buffer receiving the random data
     * @param len length of the buffer (in bytes)
     */
    void fill(uint8_t* buf, size_t len);
    
    /**
     * Verifies that the specified bytes match the random data generated by this instance.
     * @param buf buffer receiving the random data
     * @param len length of the buffer (in bytes)
     * @return -1 if the data matches, the position of the mismatch otherwise
     */
    int verify(const uint8_t* buf, size_t len);

private:
    uint32_t state;
    int nbytes;
    uint32_t bits;
};

#endif /* prng_h */
